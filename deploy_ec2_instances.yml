---
- name: Deploy EC2 instances for Red Hat Discovery demo
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    num_of_subnets: 2
    num_of_instances_per_subnet: 3
    project_tag: rh-discovery-demo

  tasks:
    - name: Create VPC network
      amazon.aws.ec2_vpc_net:
        name: rh-discovery-vpc
        cidr_block: 10.10.0.0/16
        tags:
          project: "{{ project_tag }}"
        state: present
      register: vpc_net

    - name: Create central VPC subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_net.vpc.id }}"
        cidr: 10.10.0.0/24
        tags:
          project: "{{ project_tag }}"
          central: "true"
        state: present

    - name: Create other VPC subnets
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_net.vpc.id }}"
        cidr: 10.10.{{ item }}.0/24
        tags:
          project: "{{ project_tag }}"
          central: "false"
        state: present
      loop: "{{ range(1, num_of_subnets + 1) | list }}"
      loop_control:
        label: VPC Subnet {{ item }}

    - name: Get central VPC subnet info
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          "tag:project": "{{ project_tag }}"
          "tag:central": "true"
      register: central_subnet

    - name: Get other VPC subnet info
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          "tag:project": "{{ project_tag }}"
          "tag:central": "false"
      register: vpc_subnets

    - name: Create a VPC Internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_net.vpc.id }}"
        tags:
          project: "{{ project_tag }}"
        state: present
      register: vpc_igw

    - name: Gather route table details
      amazon.aws.ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_net.vpc.id }}"
      register: vpc_route_tables

    - name: Create VPC route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_net.vpc.id }}"
        route_table_id: "{{ vpc_route_tables.route_tables.0.id }}"
        lookup: id
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ vpc_igw.gateway_id }}"
        purge_routes: no
        tags:
          project: "{{ project_tag }}"
        state: present
      register: vpc_route_table

    - name: Create security group
      amazon.aws.ec2_security_group:
        name: rh-discovery-sg
        description: Red Hat Discovery demo security group
        vpc_id: "{{ vpc_net.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 9443
            cidr_ip: 0.0.0.0/0
            rule_desc: all
        tags:
          project: "{{ project_tag }}"
        state: present
      register: security_group

    - name: Create EC2 key pair
      amazon.aws.ec2_key:
        name: rh-discovery-keypair
        key_material: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        tags:
          project: "{{ project_tag }}"
        state: present
      register: ec2_keypair

    - name: Get AMI info
      amazon.aws.ec2_ami_info:
        owners: 309956199498
        filters:
          name: "RHEL-8.8*x86_64*"
      register: amis

    - name: Set AMI facts
      set_fact:
        rhel_ami: >
          {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

    - name: Create central EC2 instance
      amazon.aws.ec2_instance:
        key_name: rh-discovery-keypair
        security_group: rh-discovery-sg
        instance_type: t2.large
        image_id: "{{ rhel_ami.image_id }}"
        wait: yes
        wait_timeout: 500
        vpc_subnet_id: "{{ central_subnet.subnets.0.id }}"
        network:
          assign_public_ip: yes
        volumes:
          - device_name: /dev/xvda
            ebs:
              volume_size: 10
          - device_name: /dev/xvdb
            ebs:
              volume_size: 30
        tags:
          project: "{{ project_tag }}"
          central: "true"
        exact_count: 1

    - name: Create other EC2 instances
      amazon.aws.ec2_instance:
        key_name: rh-discovery-keypair
        security_group: rh-discovery-sg
        instance_type: t2.small
        image_id: "{{ rhel_ami.image_id }}"
        wait: yes
        wait_timeout: 500
        vpc_subnet_id: "{{ item.id }}"
        network:
          assign_public_ip: yes
        tags:
          project: "{{ project_tag }}"
          central: "false"
        exact_count: "{{ num_of_instances_per_subnet }}"
      loop: "{{ vpc_subnets.subnets }}"
      loop_control:
        label: "{{ item.id }}"
      register: ec2_instance_result

    - name: Give instances a chance to start
      pause:
        seconds: 30
      when: ec2_instance_result is changed

    - name: Get central instance info
      amazon.aws.ec2_instance_info:
        filters:
          "tag:central": "true"
          instance-state-name: ["running"]
      register: central_instance

    - name: Get other EC2 instance info
      amazon.aws.ec2_instance_info:
        filters:
          "tag:project": "{{ project_tag }}"
          instance-state-name: ["running"]
      register: ec2_instances

    - name: Add all instances to ec2 host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: ec2
      loop: "{{ ec2_instances.instances }}"
      loop_control:
        label: "{{ item.public_ip_address }}"

    - name: Add central instance to central host group
      add_host:
        hostname: "{{ central_instance.instances.0.public_ip_address }}"
        groupname: central

    - name: Wait for all instances to finish provisioning
      wait_for:
        host: "{{ item.public_ip_address }}"
        port: 22
      loop: "{{ ec2_instances.instances }}"
      loop_control:
        label: "{{ item.public_ip_address }}"
